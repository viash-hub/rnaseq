---
title: RNAseq.vsh
format: gfm
---

<!-- README.md is generated by running 'quarto render README.qmd' -->

```{r, echo = FALSE, message = FALSE, error = FALSE, warning = FALSE}
library(tidyverse)
```

A version of the [nf-core/rnaseq](https://github.com/nf-core/rnaseq) pipeline in the [Viash framework](http://www.viash.io).

## Rationale

We stick to the original nf-core pipeline as much as possible. This also means that we create a subworkflow for the 5 main stages of the pipeline as depicted in the [README](https://github.com/nf-core/rnaseq).

The original version of the nf-core/rnaseq pipeline allowed one to point to input files directly, but more recently [a sample sheet file is required](https://github.com/nf-core/rnaseq#usage). We don't have to implement the sample sheet approach just yet and just take fastq files as input for the moment.

## Getting started

As test data, we can use the small dataset nf-core provided with [their `test` profile](https://github.com/nf-core/test-datasets/blob/rnaseq3/samplesheet/v3.10/samplesheet_test.csv): <https://github.com/nf-core/test-datasets/tree/rnaseq3/testdata/GSE110004>.

A simple script has been provided to fetch those files from the github repository and store them under `testData/test` (the subdirectory is created to support `full_test` later as well): `bin/get_testData.sh`.

To get started, we need to:

1. [Install `nextflow`](https://www.nextflow.io/docs/latest/getstarted.html) system-wide

2. Fetch the test data:

```bash
bin/get_testData.sh
```

## Running the pipeline

To actually run the pipeline, we first need to build the components and pipeline:

```bash
bin/viash ns build --setup cb
```

Now we can run the pipeline using the command:

```bash
nextflow run workflows/pre_processing/main.nf \
  -profile docker \
  --id test \
  --input testData/test/SRR6357070_1.fastq.gz \
  --publish_dir testData/test_output/
```

Alternatively, we can run the pipeline with a sample sheet using the built-in `--param_list` functionality:

```bash
cat > testData/test/sample_sheet.csv << HERE
id,input
SRR6357070_1,SRR6357070_1.fastq.gz
SRR6357071_1,SRR6357071_1.fastq.gz
HERE

nextflow run target/nextflow/workflows/pre_processing/main.nf \
  --param_list testData/test/sample_sheet.csv \
  --publish_dir "testData/test_output" \
  -profile docker \
  -resume
```