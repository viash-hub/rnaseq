---
title: rnaseq
format: gfm
---

<!-- README.md is generated by running 'quarto render README.qmd' -->

```{r, echo = FALSE, message = FALSE, error = FALSE, warning = FALSE}
library(tidyverse)
```

Main workflow

```{mermaid}
flowchart TB

  subgraph inputs[Inputs]
    input_r1[Input R1 FastQ]
    input_r2[Input R2 FastQ]
    sample_metadata[Sample metadata]
    reference_fasta[Reference fasta]
    reference_gtf[Reference GTF]
  end
  inputs:::io

  input_r1 & input_r2 & sample_metadata --> prepare_reads --> processed_r1 & processed_r2 & processed_metadata
  prepare_reads:::comp

  prepare_reads -.-> prepare_reads_qc_data

  reference_fasta & reference_gtf --> prepare_reference --> processed_fasta & processed_gtf & star_index
  prepare_reference:::comp

  prepare_reference -.-> prepare_reference_qc_data

  processed_r1 & processed_r2 & star_index & processed_fasta & processed_gtf --> align_and_quant --> aligned_reads_bam & quant_matrix
  align_and_quant:::comp
  align_and_quant -.-> align_and_quant_qc_data

  aligned_reads_bam --> postprocess_bam --> output_aligned_reads_bam
  postprocess_bam:::comp
  postprocess_bam -.-> postprocess_bam_qc_data

  quant_matrix & processed_metadata --> postprocess_mtx --> output_quant_matrix
  postprocess_mtx:::comp
  postprocess_mtx -.-> postprocess_mtx_qc_data

  prepare_reads_qc_data & prepare_reference_qc_data & align_and_quant_qc_data & postprocess_bam_qc_data & postprocess_mtx_qc_data -.-> reporting -.-> output_combined_qc_data & output_combined_qc_report
  reporting:::comp

  processed_metadata & output_quant_matrix & output_combined_qc_data --> conversion --> output_anndata & output_sce
  conversion:::comp

  subgraph outputs[Outputs]
    output_aligned_reads_bam[Aligned reads]
    output_quant_matrix[Quant matrix]
    output_combined_qc_data[QC Data]
    output_combined_qc_report[QC Report]
    output_anndata[AnnData]
    output_sce[SCE]
  end
  outputs:::io

  subgraph legend[Legend]
    comp[Component]:::comp
  end
  legend:::info


  classDef comp fill:#decbe4
  classDef io fill:#f0f0f0,stroke:#525252
  classDef subwf fill:#d9d9d9,stroke:#525252
  classDef info fill:#f0f0f0,stroke:#525252,stroke-dasharray: 4 4
```

## Prepare reads

```{mermaid}
flowchart TB

  subgraph inputs[Inputs]
    input_r1[Input R1 FastQ]
    input_r2[Input R2 FastQ]
    sample_metadata[Sample metadata]
  end

  input_r1 --> cat_fastq_r1 --> trim_r1 --> infer_strandedness_r1 --> processed_r1
  input_r2 --> cat_fastq_r2 --> trim_r2 --> infer_strandedness_r2 --> processed_r2

  processed_r1 & processed_r2 --> fastqc --> prepare_reads_qc_data

  sample_metadata --> processed_metadata

  subgraph outputs[Outputs]
    processed_r1
    processed_r2
    processed_metadata
    prepare_reads_qc_data
  end

  classDef comp fill:#decbe4
  classDef io fill:#f0f0f0,stroke:#525252
  classDef subwf fill:#d9d9d9,stroke:#525252
  classDef info fill:#f0f0f0,stroke:#525252,stroke-dasharray: 4 4
```
