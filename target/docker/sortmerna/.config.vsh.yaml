name: "sortmerna"
version: "main_build"
argument_groups:
- name: "Arguments"
  arguments:
  - type: "boolean"
    name: "--paired"
    description: "Are the reads single-end or paired-end"
    info: null
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "file"
    name: "--input"
    description: "Input fastq"
    info: null
    must_exist: true
    create_parent: true
    required: false
    direction: "input"
    multiple: true
    multiple_sep: ","
  - type: "file"
    name: "--ribo_database_manifest"
    description: "Text file containing paths to fasta files (one per line) that will\
      \ be used to create the database for SortMeRNA."
    info: null
    must_exist: true
    create_parent: true
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "file"
    name: "--versions"
    info: null
    must_exist: false
    create_parent: true
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "file"
    name: "--sortmerna_log"
    description: "Sortmerna log file."
    info: null
    default:
    - "$id.sortmerna.log"
    must_exist: false
    create_parent: true
    required: false
    direction: "output"
    multiple: false
    multiple_sep: ";"
  - type: "file"
    name: "--fastq_1"
    description: "Output file for read 1."
    info: null
    default:
    - "$id.$key.read_1.fastq"
    must_exist: true
    create_parent: true
    required: true
    direction: "output"
    multiple: false
    multiple_sep: ";"
  - type: "file"
    name: "--fastq_2"
    description: "Output file for read 2."
    info: null
    default:
    - "$id.$key.read_2.fastq"
    must_exist: false
    create_parent: true
    required: false
    direction: "output"
    multiple: false
    multiple_sep: ";"
  - type: "file"
    name: "--updated_versions"
    info: null
    default:
    - "versions.yml"
    must_exist: true
    create_parent: true
    required: false
    direction: "output"
    multiple: false
    multiple_sep: ";"
resources:
- type: "bash_script"
  path: "script.sh"
  is_executable: true
description: "Local sequence alignment tool for filtering, mapping and clustering.\
  \ The main application of SortMeRNA is filtering rRNA from metatranscriptomic data.\
  \ SortMeRNA takes as input files of reads (fasta, fastq, fasta.gz, fastq.gz) and\
  \ one or multiple rRNA database file(s), and sorts apart aligned and rejected reads\
  \ into two files.\n"
test_resources:
- type: "bash_script"
  path: "test.sh"
  is_executable: true
- type: "file"
  path: "testData/minimal_test/input_fastq/SRR6357070_1.fastq.gz"
- type: "file"
  path: "testData/minimal_test/input_fastq/SRR6357070_2.fastq.gz"
- type: "file"
  path: "testData/minimal_test/reference/rRNA"
info:
  migration_info:
    git_repo: "https://github.com/nf-core/rnaseq.git"
    paths:
    - "modules/nf-core/sortmerna/main.nf"
    - "modules/nf-core/sortmerna/meta.yml"
    last_sha: "54721c6946daf6d602d7069dc127deef9cbe6b33"
status: "enabled"
requirements:
  commands:
  - "ps"
runners:
- type: "executable"
  id: "docker"
  docker_setup_strategy: "ifneedbepullelsecachedbuild"
- type: "nextflow"
  id: "nextflow"
  directives:
    tag: "$id"
  auto:
    simplifyInput: true
    simplifyOutput: false
    transcript: false
    publish: false
  config:
    labels:
      mem1gb: "memory = 1.GB"
      mem2gb: "memory = 2.GB"
      mem4gb: "memory = 4.GB"
      mem8gb: "memory = 8.GB"
      mem16gb: "memory = 16.GB"
      mem32gb: "memory = 32.GB"
      mem64gb: "memory = 64.GB"
      mem128gb: "memory = 128.GB"
      mem256gb: "memory = 256.GB"
      mem512gb: "memory = 512.GB"
      mem1tb: "memory = 1.TB"
      mem2tb: "memory = 2.TB"
      mem4tb: "memory = 4.TB"
      mem8tb: "memory = 8.TB"
      mem16tb: "memory = 16.TB"
      mem32tb: "memory = 32.TB"
      mem64tb: "memory = 64.TB"
      mem128tb: "memory = 128.TB"
      mem256tb: "memory = 256.TB"
      mem512tb: "memory = 512.TB"
      cpu1: "cpus = 1"
      cpu2: "cpus = 2"
      cpu5: "cpus = 5"
      cpu10: "cpus = 10"
      cpu20: "cpus = 20"
      cpu50: "cpus = 50"
      cpu100: "cpus = 100"
      cpu200: "cpus = 200"
      cpu500: "cpus = 500"
      cpu1000: "cpus = 1000"
  debug: false
  container: "docker"
engines:
- type: "docker"
  id: "docker"
  image: "ubuntu:22.04"
  target_organization: "data-intuitive"
  target_registry: "ghcr.io"
  target_tag: "main_build"
  namespace_separator: "/"
  target_image_source: "https://github.com/data-intuitive/rnaseq.vsh"
  setup:
  - type: "docker"
    run:
    - "apt-get update && \\\napt-get install -y --no-install-recommends cmake g++\
      \ wget && \\\napt-get clean && \\\nwget --no-check-certificate https://github.com/sortmerna/sortmerna/releases/download/v4.3.6/sortmerna-4.3.6-Linux.sh\
      \ && \\\nbash sortmerna-4.3.6-Linux.sh --skip-license\n"
  entrypoint: null
  cmd: null
build_info:
  config: "src/sortmerna/config.vsh.yaml"
  runner: "docker"
  engine: "docker"
  output: "target/docker/sortmerna"
  executable: "target/docker/sortmerna/sortmerna"
  viash_version: "0.9.0-RC2"
  git_commit: "f1bac79d3ebb4bff084f592da4371d1e3a1a6865"
  git_remote: "https://github.com/data-intuitive/rnaseq.vsh"
package_config:
  info: null
  viash_version: "0.9.0-RC2"
  source: "src"
  target: "target"
  config_mods:
  - ".version := 'dev'\n.requirements.commands := ['ps']\n.engines[.type == 'docker'].target_registry\
    \ := 'ghcr.io'\n.engines[.type == 'docker'].target_organization := 'data-intuitive'\n\
    .engines[.type == 'docker'].target_image_source := 'https://github.com/data-intuitive/rnaseq.vsh'\n\
    .runners[.type == 'nextflow'].directives.tag := '$id'\n.runners[.type == 'nextflow'].auto.simplifyOutput\
    \ := false"
  - ".version := \"main_build\""
  - ".engines[.type == 'docker'].target_tag := 'main_build'"
